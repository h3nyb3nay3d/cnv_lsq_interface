__________________________________	••Start Zookeeper
.\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties
./bin/zookeeper-server-start.sh ./config/zookeeper.properties


__________________________________	••Start Kafka Server
.\bin\windows\kafka-server-start.bat .\config\server.properties
./bin/kafka-server-start.sh ./config/server.properties

__________________________________	••Create Kafka Topic
.\bin\windows\kafka-topics.bat --create --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config ./config/client-ssl.properties
./bin/kafka-topics.sh --create --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config ./config/client-ssl.properties

.\bin\windows\kafka-topics.bat --create --topic PENDING_ASYNC_DEALS_BY_TIERS_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config .\config\client-ssl.properties
./bin/kafka-topics.sh --create --topic PENDING_ASYNC_DEALS_BY_TIERS_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config ./config/client-ssl.properties

.\bin\windows\kafka-topics.bat --create --topic PENDING_DRAWDOWNS_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config .\config\client-ssl.properties
./bin/kafka-topics.sh --create --topic PENDING_DRAWDOWNS_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config ./config/client-ssl.properties


.\bin\windows\kafka-topics.bat --create --topic STREAM_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config .\config\client-ssl.properties
./bin/kafka-topics.sh --create --topic STREAM_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config ./config/client-ssl.properties


.\bin\windows\kafka-topics.bat --create --topic REQUESTED_ASYNC_DEALS_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config .\config\client-ssl.properties
./bin/kafka-topics.sh --create --topic REQUESTED_ASYNC_DEALS_TOPIC --bootstrap-server localhost:9093 --replication-factor 1 --partitions 3 --command-config ./config/client-ssl.properties


__________________________________	••Create Producer Without key
.\bin\windows\kafka-console-producer.bat --broker-list localhost:9093 --topic REQUESTED_ASYNC_DEALS_TOPIC --producer.config .\config\client-ssl.properties

__________________________________	••Create Consumer Without Key
.\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9093 --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC --from-beginning --consumer.config .\config\client-ssl.properties
./bin/kafka-console-consumer.sh --bootstrap-server localhost:9093 --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC --from-beginning --consumer.config .\config\client-ssl.properties

__________________________________	••Create Producer With key
.\bin\windows\kafka-console-producer.bat --broker-list localhost:9093 --topic t_whole --property "key.separator=." --property "parse.key=true"

__________________________________
	                                ••Create Consumer With Key
.\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9093 --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC -property "key.separator=." --property "print.key=true" --consumer.config .\config\client-ssl.properties

__________________________________	••View Topic List
.\bin\windows\kafka-topics.bat --bootstrap-server localhost:9093 --list --command-config .\config\client-ssl.properties
./bin/kafka-topics.sh --bootstrap-server localhost:9093 --list --command-config ./config/client-ssl.properties

__________________________________
	••View Consumer Group List
.\bin\windows\kafka-consumer-groups.bat --bootstrap-server localhost:9093 --list --command-config .\config\client-ssl.properties

__________________________________
	••Create Consumer With Group
.\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9093 --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC --group DEAL_CONSUMER_GROUP_ID --consumer.config .\config\client-ssl.properties

__________________________________	••Describe Topic
.\bin\windows\kafka-topics.bat --bootstrap-server localhost:9093 --describe --topic PENDING_ASYNC_DEALS_BY_DEAL_EXTERNAL_ID_TOPIC --command-config .\config\client-ssl.properties

__________________________________
.\bin\windows\kafka-acls.bat --authorizer-properties zookeeper.connect=localhost:2181 --add --allow-principal User:CN=localhost --operation All --group '*' --topic '*' --transactional-id '*'
.\bin\windows\kafka-configs.bat --authorizer-properties zookeeper.connect=localhost:2181 --alter --add-config 'SCRAM-SHA-512=[password='LINEDATA']' --entity-type users --entity-name localhost


Example steps to implement CA, truststore and keystore for zookeeper SSL security :
𝟏. 𝐆𝐞𝐧𝐞𝐫𝐚𝐭𝐞 𝐂𝐀 == openssl req -new -x509 -keyout ca-key -out ca-cert -days 3650
𝟐. 𝐂𝐫𝐞𝐚𝐭𝐞 𝐓𝐫𝐮𝐬𝐭𝐬𝐭𝐨𝐫𝐞 == keytool -keystore kafka.zookeeper-broker2.truststore.jks -alias ca-cert -import -file ca-cert
𝟑. 𝐂𝐫𝐞𝐚𝐭𝐞 𝐊𝐞𝐲𝐬𝐭𝐨𝐫𝐞 == keytool -keystore kafka.zookeeper-broker2.keystore.jks -alias zookeeper-broker2 -validity 3650 -genkey -keyalg RSA -ext SAN=dns:localhost
𝟒. 𝐂𝐫𝐞𝐚𝐭𝐞 𝐜𝐞𝐫𝐭𝐢𝐟𝐢𝐜𝐚𝐭𝐞 𝐬𝐢𝐠𝐧𝐢𝐧𝐠 𝐫𝐞𝐪𝐮𝐞𝐬𝐭 (𝐂𝐒𝐑) == keytool -keystore kafka.zookeeper-broker2.keystore.jks -alias zookeeper-broker2 -certreq -file ca-request-zookeeper-broker2
𝟓. 𝐒𝐢𝐠𝐧 𝐭𝐡𝐞 𝐂𝐒𝐑 == openssl x509 -req -CA ca-cert -CAkey ca-key -in ca-request-zookeeper-broker2 -out ca-signed-zookeeper-broker2 -days 3650 -CAcreateserial
𝟔. 𝐈𝐦𝐩𝐨𝐫𝐭 𝐭𝐡𝐞 𝐂𝐀 𝐢𝐧𝐭𝐨 𝐊𝐞𝐲𝐬𝐭𝐨𝐫𝐞 == keytool -keystore kafka.zookeeper-broker2.keystore.jks -alias ca-cert -import -file ca-cert
𝟕. 𝐈𝐦𝐩𝐨𝐫𝐭 𝐭𝐡𝐞 𝐬𝐢𝐠𝐧𝐞𝐝 𝐜𝐞𝐫𝐭𝐢𝐟𝐢𝐜𝐚𝐭𝐞 𝐢𝐧𝐭𝐨 𝐊𝐞𝐲𝐬𝐭𝐨𝐫𝐞 == keytool -keystore kafka.zookeeper-broker2.keystore.jks -alias zookeeper-broker2 -import -file ca-signed-zookeeper-broker2

SSL SPECIFIC PROPERTIES TO CONFIGURE ZOOKEEPER AND BROKERS FOR ZOOKEEPER SECURITY:
𝟏. 𝐙𝐎𝐎𝐊𝐄𝐄𝐏𝐄𝐑.𝐏𝐑𝐎𝐏𝐄𝐑𝐓𝐈𝐄𝐒
secureClientPort=2182
authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider
serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory
ssl.trustStore.location=kafka.zookeeper.truststore.jks
ssl.trustStore.password=12345
ssl.keyStore.location=kafka.zookeeper.keystore.jks
ssl.keyStore.password=12345
ssl.clientAuth=need

𝟐. 𝐒𝐄𝐑𝐕𝐄𝐑.𝐏𝐑𝐎𝐏𝐄𝐑𝐓𝐈𝐄𝐒
zookeeper.connect=localhost:2182
zookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
zookeeper.ssl.client.enable=true
zookeeper.ssl.protocol=TLSv1.2
zookeeper.ssl.truststore.location=kafka.broker0.truststore.jks
zookeeper.ssl.truststore.password=12345
zookeeper.ssl.keystore.location=/kafka.broker0.keystore.jks
zookeeper.ssl.keystore.password=12345
zookeeper.set.acl=true

SSL SPECIFIC PROPERTIES TO CONFIGURE BROKERS, PRODUCERS AND CONSUMERS FOR KAFKA/BROKER SECURITY:
𝟏. 𝐒𝐄𝐑𝐕𝐄𝐑.𝐏𝐑𝐎𝐏𝐄𝐑𝐓𝐈𝐄𝐒
listeners=SSL://localhost:9093
advertised.listeners=SSL://localhost:9093
ssl.truststore.location=kafka.broker0.truststore.jks
ssl.truststore.password=12345
ssl.keystore.location=kafka.broker0.keystore.jks
ssl.keystore.password=12345
ssl.key.password=12345
security.inter.broker.protocol=SSL
ssl.client.auth=required
ssl.protocol=TLSv1.2

𝟐. 𝐏𝐑𝐎𝐃𝐔𝐂𝐄𝐑.𝐏𝐑𝐎𝐏𝐄𝐑𝐓𝐈𝐄𝐒
bootstrap.servers=localhost:9093
security.protocol=SSL
ssl.truststore.location=kafka.producer.truststore.jks
ssl.truststore.password=12345
ssl.keystore.location=kafka.producer.keystore.jks
ssl.keystore.password=12345
ssl.key.password=12345
ssl.protocol=TLSv1.2

𝟑. 𝐂𝐎𝐍𝐒𝐔𝐌𝐄𝐑.𝐏𝐑𝐎𝐏𝐄𝐑𝐓𝐈𝐄𝐒
bootstrap.servers=localhost:9093
group.id=ssl-consumer-group
security.protocol=SSL
ssl.truststore.location=kafka.consumer.truststore.jks
ssl.truststore.password=12345
ssl.keystore.location=kafka.consumer.keystore.jks
ssl.keystore.password=12345
ssl.key.password=12345
ssl.protocol=TLSv1.2
